name: Shipping

on:
    push:
        branches:
            - test
        tags:
            - v*
defaults:
    run:
        working-directory: ./

permissions:
    contents: read
    id-token: write

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    format-check:
        name: Check formatting
        runs-on: ubuntu-latest
        steps:
            - name: Set up Go 1.x
              uses: actions/setup-go@v5
              with:
                  go-version: ^1.22
            - name: Check out code into the Go module directory
              uses: actions/checkout@v4
            - name: Run Format Check
              run: make check-format
            - name: Vet
              run: go vet ./...

    lint:
        name: Lint
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Lint
              uses: golangci/golangci-lint-action@v6

    test:
        name: Test Application
        runs-on: ubuntu-latest
        needs:
            - format-check
            - lint
        steps:
            - name: Set up Go 1.x
              uses: actions/setup-go@v5
              with:
                  go-version: ^1.22

            - name: Check out code into the Go module directory
              uses: actions/checkout@v4

            - name: Run Test
              run: make test

            - name: Coverage Check
              run: make coverage

            - name: Generate Report
              run: make report

            - name: Copy Files
              run: |
                  mkdir  reports
                  cp cover.html reports/.

            - name: Archive
              uses: actions/upload-artifact@v4
              with:
                  name: reports
                  path: reports

    build:
        name: Build App
        runs-on: ubuntu-latest
        needs: test
        steps:
            - name: Set up Go 1.x
              uses: actions/setup-go@v5
              with:
                  go-version: ^1.22

            - name: Check out code into the Go module directory #
              uses: actions/checkout@v4

            - name: Build
              run: make build

            - name: Copy Files
              run: |
                  mkdir  artifacts
                  cp api artifacts/.

            - name: Archive
              uses: actions/upload-artifact@v4
              with:
                  name: api
                  path: artifacts

    deliver:
        name: Release
        needs: build
        runs-on: ubuntu-latest
        if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Download binary
              uses: actions/download-artifact@v4
              with:
                  name: api

            - name: Changelog
              uses: scottbrenner/generate-changelog-action@master
              id: Changelog

            - name: Create Release
              id: create_release
              uses: softprops/action-gh-release@v2
              with:
                  tag_name: ${{ github.ref }}
                  name: Release ${{ github.ref }}
                  body: |
                      ${{ steps.Changelog.outputs.changelog }}
                  draft: false
                  prerelease: false
                  token: ${{ secrets.GH_PAT }}

    containerize-buildpack:
        name: Build Container buildpack
        runs-on: ubuntu-latest #
        needs: test #<6>
        steps:
            - name: Check out code into the Go module directory #
              uses: actions/checkout@v4

            - name: Install Pack
              run: (curl -sSL "https://github.com/buildpacks/pack/releases/download/v0.35.1/pack-v0.35.1-linux.tgz" | sudo tar -C /usr/local/bin/ --no-same-owner -xzv pack)

            - id: 'auth'
              uses: 'google-github-actions/auth@v2'
              with:
                  credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

            - name: Build
              run: pack build gcr.io/${{ secrets.GCP_PROJECT_ID }}/shipping-go:latest --builder gcr.io/buildpacks/builder:v1

            - name: Set up Cloud SDK
              uses: google-github-actions/setup-gcloud@v2
              with:
                  project_id: ${{ secrets.GCP_PROJECT_ID }}

            - name: 'Use gcloud CLI'
              run: 'gcloud info'

            - name: Configure Docker
              run: gcloud auth configure-docker --quiet

            - name: Push Docker image
              run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/shipping-go:latest

            - name: Log in to the GHCR
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Tag for Github
              run: docker image tag gcr.io/${{ secrets.GCP_PROJECT_ID }}/shipping-go:latest ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

            - name: Push Docker image to GCP
              run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

    deploy-container:
        name: Deploy Container buildpack
        runs-on: ubuntu-latest #
        needs: containerize-buildpack #<6>
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        steps:
            - name: Deploy to CaaS
              id: deploy
              uses: google-github-actions/deploy-cloudrun@v2
              with:
                  service: translate
                  image: gcr.io/${{ secrets.GCP_PROJECT_ID }}/shipping-go:latest

            - id: test
              run: curl "${{ steps.deploy.outputs.url }}?word=hello"

    # deploy-function:
    #     name: Deploy FaaS
    #     runs-on: ubuntu-latest
    #     needs: test
    #     if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    #     steps:
    #         - name: Check out code into the Go module directory
    #           uses: actions/checkout@v4
    #           with:
    #               fetch-depth: 0

    #         - id: 'auth'
    #           uses: 'google-github-actions/auth@v2'
    #           with:
    #               credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    #         - name: Deploy function
    #           id: deploy
    #           uses: google-github-actions/deploy-cloud-functions@v2
    #           with:
    #               name: translate
    #               runtime: go122
    #               source_dir: ./
    #               entry_point: Translate

    #         - id: test
    #           run: |
    #               curl "${{ steps.deploy.outputs.url }}?word=hello" \
    #               -H "Authorization: Bearer ${{ steps.auth.outputs.access_token }}" \
    #               -H "Content-Type: application/json"

    # deploy-paas:
    #     name: Deploy PaaS
    #     runs-on: ubuntu-latest
    #     needs: test
    #     if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}

    #     steps:
    #         - name: Check out code into the Go module directory # <4>
    #           uses: actions/checkout@v4
    #           with:
    #               fetch-depth: 0

    #         - id: 'auth'
    #           uses: 'google-github-actions/auth@v2'
    #           with:
    #               credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    #         - name: Deploy App
    #           id: 'deploy'
    #           uses: 'google-github-actions/deploy-appengine@v2'
    #           with:
    #               project_id: playground-367903

    #         - id: test
    #           run: curl "${{ steps.deploy.outputs.url }}/translate?word=hello"
