name: Shipping

on:
    push:
        branches:
            - main
defaults:
    run:
        working-directory: ./

jobs:
    test:
        name: Test Application
        runs-on: ubuntu-latest
        steps:
            - name: Set up Go 1.x
              uses: actions/setup-go@v5
              with:
                  go-version: ^1.22
            - name: Check out code into the Go module directory
              uses: actions/checkout@v4
            - name: Run Test
              run: make test
            - name: Coverage Check
              run: make coverage
            - name: Generate Report
              run: make report
            - name: Copy Files
              run: |
                  mkdir  reports
                  cp cover.html reports/.

            - name: Archive
              uses: actions/upload-artifact@v4
              with:
                  name: reports
                  path: reports

    # build:
    #     name: Build App
    #     runs-on: ubuntu-latest
    #     needs: test
    #     steps:
    #         - name: Set up Go 1.x
    #           uses: actions/setup-go@v5
    #           with:
    #               go-version: ^1.22

    #         - name: Check out code into the Go module directory #
    #           uses: actions/checkout@v4

    #         - name: Build
    #           run: make build

    #         - name: Copy Files
    #           run: |
    #               mkdir  artifacts
    #               cp api artifacts/.

    #         - name: Archive
    #           uses: actions/upload-artifact@v4
    #           with:
    #               name: api
    #               path: artifacts
    # deliver:
    #     name: Release
    #     needs: build
    #     runs-on: ubuntu-latest
    #     if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    #     steps:
    #         - name: Checkout code
    #           uses: actions/checkout@v4

    #         - name: Download binary
    #           uses: actions/download-artifact@v4
    #           with:
    #               name: api

    #         - name: Changelog
    #           uses: scottbrenner/generate-changelog-action@master
    #           id: Changelog

    #         - name: Create Release
    #           id: create_release
    #           uses: softprops/action-gh-release@v2
    #           env:
    #               GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
    #           with:
    #               tag_name: ${{ github.ref }}
    #               name: Release ${{ github.ref }}
    #               body: |
    #                   ${{ steps.Changelog.outputs.changelog }}
    #               draft: false
    #               prerelease: false
    #         - name: Upload Release Binary
    #           uses: actions/upload-release-asset@v1
    #           env:
    #               GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #           with:
    #               upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
    #               asset_path: api
    #               asset_name: api
    #               asset_content_type: application/octet-stream

    deploy-function:
        name: Deploy FaaS
        runs-on: ubuntu-latest
        needs: test
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        steps:
            - name: Check out code into the Go module directory
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - id: 'auth'
              uses: 'google-github-actions/auth@v2'
              with:
                  credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

            - name: Deploy function
              id: deploy
              uses: google-github-actions/deploy-cloud-functions@v2
              with:
                  name: translate
                  runtime: go122
                  source_dir: ./
                  entry_point: Translate

            - id: test
              run: |
                  curl "${{ steps.deploy.outputs.url }}?word=hello" \
                  -H "Authorization: Bearer ${{ steps.auth.outputs.access_token }}" \
                  -H "Content-Type: application/json"
